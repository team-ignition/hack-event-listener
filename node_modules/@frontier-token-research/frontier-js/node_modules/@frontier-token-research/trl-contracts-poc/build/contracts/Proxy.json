{
  "contractName": "Proxy",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_contractAddress",
          "type": "address"
        }
      ],
      "name": "setVoterRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_contractAddress",
          "type": "address"
        }
      ],
      "name": "setToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "voteToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "candidateRegistry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "setSubscriptionAccount",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "votingConstraints",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_contractAddress",
          "type": "address"
        }
      ],
      "name": "setVoteToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "subscriptionAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_contractAddress",
          "type": "address"
        }
      ],
      "name": "setVault",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_contractAddress",
          "type": "address"
        }
      ],
      "name": "setPeriod",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "repWeights",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "voterRegistry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_contractAddress",
          "type": "address"
        }
      ],
      "name": "setCandidateRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "logicContract",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakingConstraints",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "reputationWindowSize",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "period",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "vault",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "setContractLogic",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "proxyType",
      "outputs": [
        {
          "name": "proxyTypeId",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040526040805190810160405280600060ff16815260200160fd60ff16815250600890600261003192919061015c565b506040805190810160405280600060ff16815260200160fd60ff16815250600a90600261005f92919061015c565b506000600c556001600d60006101000a81548160ff0219169083151502179055506000600d60016101000a81548160ff021916908315150217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36101c6565b8260028101928215610190579160200282015b8281111561018f578251829060ff1690559160200191906001019061016f565b5b50905061019d91906101a1565b5090565b6101c391905b808211156101bf5760008160009055506001016101a7565b5090565b90565b610f93806101d56000396000f300608060405260043610610154576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630ad303421461019b578063144fa6d7146101de578063160d66ae1461022157806319de04771461027857806322179712146102cf5780633c84107f146103125780634555d5c9146103535780634d23aaa71461037e578063508ca9f1146103c15780635c60da1b146104185780636817031b1461046f578063715018a6146104b25780638da5cb5b146104c95780638f32d59b14610520578063ac5271f51461054f578063b2a5655114610592578063be60040e146105d3578063c25466651461062a578063cc0e97c91461066d578063dac93e1b146106c4578063e43c809614610705578063ef78d4fd14610730578063f2fde38b14610787578063f431563b146107ca578063fbfa77cf14610825578063fc0c546a1461087c575b600061015e6108d3565b905060405136600082376000803683855af43d806000843e816000811461018c576001811461019057610194565b8184fd5b8184f35b5050505050005b3480156101a757600080fd5b506101dc600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108fd565b005b3480156101ea57600080fd5b5061021f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610941565b005b34801561022d57600080fd5b50610236610985565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561028457600080fd5b5061028d6109ab565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102db57600080fd5b50610310600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109d1565b005b34801561031e57600080fd5b5061033d60048036038101908080359060200190929190505050610a15565b6040518082815260200191505060405180910390f35b34801561035f57600080fd5b50610368610a2f565b6040518082815260200191505060405180910390f35b34801561038a57600080fd5b506103bf600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a38565b005b3480156103cd57600080fd5b506103d6610a7c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561042457600080fd5b5061042d6108d3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561047b57600080fd5b506104b0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610aa2565b005b3480156104be57600080fd5b506104c7610ae6565b005b3480156104d557600080fd5b506104de610bb8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561052c57600080fd5b50610535610be1565b604051808215151515815260200191505060405180910390f35b34801561055b57600080fd5b50610590600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c38565b005b34801561059e57600080fd5b506105bd60048036038101908080359060200190929190505050610c7c565b6040518082815260200191505060405180910390f35b3480156105df57600080fd5b506105e8610c9f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561063657600080fd5b5061066b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cc5565b005b34801561067957600080fd5b50610682610d09565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156106d057600080fd5b506106ef60048036038101908080359060200190929190505050610d2f565b6040518082815260200191505060405180910390f35b34801561071157600080fd5b5061071a610d49565b6040518082815260200191505060405180910390f35b34801561073c57600080fd5b50610745610d4f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561079357600080fd5b506107c8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d75565b005b3480156107d657600080fd5b5061080b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d94565b604051808215151515815260200191505060405180910390f35b34801561083157600080fd5b5061083a610e21565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561088857600080fd5b50610891610e47565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600a81600281101515610a2457fe5b016000915090505481565b60006002905090565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610aee610be1565b1515610af957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600e81815481101515610c8b57fe5b906000526020600020016000915090505481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600881600281101515610d3e57fe5b016000915090505481565b600c5481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610d7d610be1565b1515610d8857600080fd5b610d9181610e6d565b50565b6000610d9e610bb8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610dd757600080fd5b81600f60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610ea957600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a7230582058e4f3925958252c47e55f1521d61b36f665b3f1278da78ea1a358e8208494a80029",
  "deployedBytecode": "0x608060405260043610610154576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630ad303421461019b578063144fa6d7146101de578063160d66ae1461022157806319de04771461027857806322179712146102cf5780633c84107f146103125780634555d5c9146103535780634d23aaa71461037e578063508ca9f1146103c15780635c60da1b146104185780636817031b1461046f578063715018a6146104b25780638da5cb5b146104c95780638f32d59b14610520578063ac5271f51461054f578063b2a5655114610592578063be60040e146105d3578063c25466651461062a578063cc0e97c91461066d578063dac93e1b146106c4578063e43c809614610705578063ef78d4fd14610730578063f2fde38b14610787578063f431563b146107ca578063fbfa77cf14610825578063fc0c546a1461087c575b600061015e6108d3565b905060405136600082376000803683855af43d806000843e816000811461018c576001811461019057610194565b8184fd5b8184f35b5050505050005b3480156101a757600080fd5b506101dc600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108fd565b005b3480156101ea57600080fd5b5061021f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610941565b005b34801561022d57600080fd5b50610236610985565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561028457600080fd5b5061028d6109ab565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102db57600080fd5b50610310600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109d1565b005b34801561031e57600080fd5b5061033d60048036038101908080359060200190929190505050610a15565b6040518082815260200191505060405180910390f35b34801561035f57600080fd5b50610368610a2f565b6040518082815260200191505060405180910390f35b34801561038a57600080fd5b506103bf600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a38565b005b3480156103cd57600080fd5b506103d6610a7c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561042457600080fd5b5061042d6108d3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561047b57600080fd5b506104b0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610aa2565b005b3480156104be57600080fd5b506104c7610ae6565b005b3480156104d557600080fd5b506104de610bb8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561052c57600080fd5b50610535610be1565b604051808215151515815260200191505060405180910390f35b34801561055b57600080fd5b50610590600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c38565b005b34801561059e57600080fd5b506105bd60048036038101908080359060200190929190505050610c7c565b6040518082815260200191505060405180910390f35b3480156105df57600080fd5b506105e8610c9f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561063657600080fd5b5061066b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cc5565b005b34801561067957600080fd5b50610682610d09565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156106d057600080fd5b506106ef60048036038101908080359060200190929190505050610d2f565b6040518082815260200191505060405180910390f35b34801561071157600080fd5b5061071a610d49565b6040518082815260200191505060405180910390f35b34801561073c57600080fd5b50610745610d4f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561079357600080fd5b506107c8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d75565b005b3480156107d657600080fd5b5061080b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d94565b604051808215151515815260200191505060405180910390f35b34801561083157600080fd5b5061083a610e21565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561088857600080fd5b50610891610e47565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600a81600281101515610a2457fe5b016000915090505481565b60006002905090565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610aee610be1565b1515610af957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600e81815481101515610c8b57fe5b906000526020600020016000915090505481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600881600281101515610d3e57fe5b016000915090505481565b600c5481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610d7d610be1565b1515610d8857600080fd5b610d9181610e6d565b50565b6000610d9e610bb8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610dd757600080fd5b81600f60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610ea957600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a7230582058e4f3925958252c47e55f1521d61b36f665b3f1278da78ea1a358e8208494a80029",
  "sourceMap": "240:1367:3:-;;;815:52:7;;;;;;;;;855:1;815:52;;;;;;858:8;815:52;;;;;;;;;;;;;:::i;:::-;;946:51;;;;;;;;;985:1;946:51;;;;;;988:8;946:51;;;;;;;;;;;;;:::i;:::-;;1042:1;1004:39;;1081:4;1050:35;;;;;;;;;;;;;;;;;;;;1119:5;1091:33;;;;;;;;;;;;;;;;;;;;518:10:31;509:6;;:19;;;;;;;;;;;;;;;;;;572:6;;;;;;;;;;;539:40;;568:1;539:40;;;;;;;;;;;;240:1367:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "240:1367:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1189:14;1206:16;:14;:16::i;:::-;1189:33;;1272:4;1266:11;1311:12;1308:1;1303:3;1290:34;1399:1;1396;1382:12;1377:3;1369:6;1364:3;1351:50;1426:14;1476:4;1473:1;1468:3;1453:28;1501:6;1525:1;1520:28;;;;1566:1;1561:28;;;;1494:95;;1520:28;1541:4;1536:3;1529:17;1561:28;1582:4;1577:3;1570:17;1494:95;;1241:358;;;;240:1367;1504:118:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1504:118:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;1741:99;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1741:99:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;280:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;280:26:7;;;;;;;;;;;;;;;;;;;;;;;;;;;359:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;359:33:7;;;;;;;;;;;;;;;;;;;;;;;;;;;2531:104;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2531:104:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;946:51;;8:9:-1;5:2;;;30:1;27;20:12;5:2;946:51:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;779:88:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;779:88:3;;;;;;;;;;;;;;;;;;;;;;;1964:111:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1964:111:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;710:34;;8:9:-1;5:2;;;30:1;27;20:12;5:2;710:34:7;;;;;;;;;;;;;;;;;;;;;;;;;;;954:93:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;954:93:3;;;;;;;;;;;;;;;;;;;;;;;;;;;2426:99:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2426:99:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;1273:127:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1273:127:31;;;;;;639:70;;8:9:-1;5:2;;;30:1;27;20:12;5:2;639:70:31;;;;;;;;;;;;;;;;;;;;;;;;;;;926:83;;8:9:-1;5:2;;;30:1;27;20:12;5:2;926:83:31;;;;;;;;;;;;;;;;;;;;;;;;;;;2204:103:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2204:103:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;1130:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1130:27:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;446:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;446:29:7;;;;;;;;;;;;;;;;;;;;;;;;;;;1250:126;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1250:126:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;285:28:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;285:28:3;;;;;;;;;;;;;;;;;;;;;;;;;;;815:52:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;815:52:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1004:39;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1004:39:7;;;;;;;;;;;;;;;;;;;;;;;584:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;584:21:7;;;;;;;;;;;;;;;;;;;;;;;;;;;1561:101:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1561:101:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;497:176:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;497:176:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;646:18:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;646:18:7;;;;;;;;;;;;;;;;;;;;;;;;;;;521;;8:9:-1;5:2;;;30:1;27;20:12;5:2;521:18:7;;;;;;;;;;;;;;;;;;;;;;;;;;;954:93:3;1001:7;1027:13;;;;;;;;;;;1020:20;;954:93;:::o;1504:118:7:-;1598:16;1573:13;;:42;;;;;;;;;;;;;;;;;;1504:118;:::o;1741:99::-;1816:16;1802:5;;:31;;;;;;;;;;;;;;;;;;1741:99;:::o;280:26::-;;;;;;;;;;;;;:::o;359:33::-;;;;;;;;;;;;;:::o;2531:104::-;2620:8;2598:19;;:30;;;;;;;;;;;;;;;;;;2531:104;:::o;946:51::-;;;;;;;;;;;;;;;;;;;;:::o;779:88:3:-;821:19;859:1;852:8;;779:88;:::o;1964:111:7:-;2051:16;2029:9;;:39;;;;;;;;;;;;;;;;;;1964:111;:::o;710:34::-;;;;;;;;;;;;;:::o;2426:99::-;2501:16;2487:5;;:31;;;;;;;;;;;;;;;;;;2426:99;:::o;1273:127:31:-;824:9;:7;:9::i;:::-;816:18;;;;;;;;1367:1;1330:40;;1351:6;;;;;;;;;;;1330:40;;;;;;;;;;;;1393:1;1376:6;;:19;;;;;;;;;;;;;;;;;;1273:127::o;639:70::-;676:7;698:6;;;;;;;;;;;691:13;;639:70;:::o;926:83::-;965:4;998:6;;;;;;;;;;;984:20;;:10;:20;;;977:27;;926:83;:::o;2204:103:7:-;2283:16;2266:6;;:34;;;;;;;;;;;;;;;;;;2204:103;:::o;1130:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;446:29::-;;;;;;;;;;;;;:::o;1250:126::-;1352:16;1323:17;;:46;;;;;;;;;;;;;;;;;;1250:126;:::o;285:28:3:-;;;;;;;;;;;;;:::o;815:52:7:-;;;;;;;;;;;;;;;;;;;;:::o;1004:39::-;;;;:::o;584:21::-;;;;;;;;;;;;;:::o;1561:101:31:-;824:9;:7;:9::i;:::-;816:18;;;;;;;;1629:28;1648:8;1629:18;:28::i;:::-;1561:101;:::o;497:176:3:-;557:12;603:7;:5;:7::i;:::-;589:21;;:10;:21;;;581:30;;;;;;;;637:8;621:13;;:24;;;;;;;;;;;;;;;;;;662:4;655:11;;497:176;;;:::o;646:18:7:-;;;;;;;;;;;;;:::o;521:::-;;;;;;;;;;;;;:::o;1796:169:31:-;1885:1;1865:22;;:8;:22;;;;1857:31;;;;;;;;1928:8;1899:38;;1920:6;;;;;;;;;;;1899:38;;;;;;;;;;;;1952:8;1943:6;;:17;;;;;;;;;;;;;;;;;;1796:169;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"./TRLStorage.sol\";\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n\n/**\n * A proxy Smart Contract following ERC897. Delegate calls to a target contract accessible via implementation() \n */\n\ncontract Proxy is Ownable, TRLStorage {\n\n    address public logicContract;\n\n    /**\n     * @dev Sets the target address where the calls will be delegated. \n     * @param _account Target address, that will be accesible via implementation()\n     */\n     \n    function setContractLogic(address _account) public returns (bool success) {\n        require(msg.sender == owner());\n        logicContract = _account;\n        return true;\n    }\n    \n    /**\n     * @dev ERC897, whether it is a forwarding (1) or an upgradeable (2) proxy\n     */\n\n    function proxyType() public pure returns (uint256 proxyTypeId) {\n        return 2;\n    }\n\n    /**\n    * @dev ERC897, the address the proxy would delegate calls to\n    */\n\n    function implementation() public view returns (address) {\n        return logicContract;\n    }\n\n    /**\n    * @dev Proxy function. Delegate calls to the address taken on implementation()\n    */\n\n    function () payable public {\n        address target = implementation();\n        assembly {\n            let ptr := mload(0x40)\n            calldatacopy(ptr, 0, calldatasize)\n            let result := delegatecall(gas, target, ptr, calldatasize, 0, 0)\n            let size := returndatasize\n            returndatacopy(ptr, 0, size)\n            switch result\n            case 0 { revert(ptr, size) }\n            case 1 { return(ptr, size) }\n        }\n    }\n}",
  "sourcePath": "/home/travis/build/Frontier-project/TRL/contracts/Proxy.sol",
  "ast": {
    "absolutePath": "/home/travis/build/Frontier-project/TRL/contracts/Proxy.sol",
    "exportedSymbols": {
      "Proxy": [
        596
      ]
    },
    "id": 597,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 539,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "/home/travis/build/Frontier-project/TRL/contracts/TRLStorage.sol",
        "file": "./TRLStorage.sol",
        "id": 540,
        "nodeType": "ImportDirective",
        "scope": 597,
        "sourceUnit": 1802,
        "src": "26:26:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 541,
        "nodeType": "ImportDirective",
        "scope": 597,
        "sourceUnit": 5390,
        "src": "53:63:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 542,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5389,
              "src": "258:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$5389",
                "typeString": "contract Ownable"
              }
            },
            "id": 543,
            "nodeType": "InheritanceSpecifier",
            "src": "258:7:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 544,
              "name": "TRLStorage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1801,
              "src": "267:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TRLStorage_$1801",
                "typeString": "contract TRLStorage"
              }
            },
            "id": 545,
            "nodeType": "InheritanceSpecifier",
            "src": "267:10:3"
          }
        ],
        "contractDependencies": [
          1801,
          5389
        ],
        "contractKind": "contract",
        "documentation": "A proxy Smart Contract following ERC897. Delegate calls to a target contract accessible via implementation() ",
        "fullyImplemented": true,
        "id": 596,
        "linearizedBaseContracts": [
          596,
          1801,
          5389
        ],
        "name": "Proxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 547,
            "name": "logicContract",
            "nodeType": "VariableDeclaration",
            "scope": 596,
            "src": "285:28:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 546,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "285:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 568,
              "nodeType": "Block",
              "src": "571:102:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 555,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5917,
                            "src": "589:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "589:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 557,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5314,
                            "src": "603:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "603:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "589:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 554,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5920,
                        5921
                      ],
                      "referencedDeclaration": 5920,
                      "src": "581:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "581:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 561,
                  "nodeType": "ExpressionStatement",
                  "src": "581:30:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 562,
                      "name": "logicContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 547,
                      "src": "621:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 563,
                      "name": "_account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 549,
                      "src": "637:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "621:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 565,
                  "nodeType": "ExpressionStatement",
                  "src": "621:24:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "662:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 553,
                  "id": 567,
                  "nodeType": "Return",
                  "src": "655:11:3"
                }
              ]
            },
            "documentation": "@dev Sets the target address where the calls will be delegated. \n@param _account Target address, that will be accesible via implementation()",
            "id": 569,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setContractLogic",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 549,
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "scope": 569,
                  "src": "523:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 548,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "523:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "522:18:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 552,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 569,
                  "src": "557:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 551,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "557:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "556:14:3"
            },
            "scope": 596,
            "src": "497:176:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 576,
              "nodeType": "Block",
              "src": "842:25:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "32",
                    "id": 574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "859:1:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "functionReturnParameters": 573,
                  "id": 575,
                  "nodeType": "Return",
                  "src": "852:8:3"
                }
              ]
            },
            "documentation": "@dev ERC897, whether it is a forwarding (1) or an upgradeable (2) proxy",
            "id": 577,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "proxyType",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 570,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "797:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 573,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 572,
                  "name": "proxyTypeId",
                  "nodeType": "VariableDeclaration",
                  "scope": 577,
                  "src": "821:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 571,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "821:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "820:21:3"
            },
            "scope": 596,
            "src": "779:88:3",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 584,
              "nodeType": "Block",
              "src": "1010:37:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 582,
                    "name": "logicContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 547,
                    "src": "1027:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 581,
                  "id": 583,
                  "nodeType": "Return",
                  "src": "1020:20:3"
                }
              ]
            },
            "documentation": "@dev ERC897, the address the proxy would delegate calls to",
            "id": 585,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "implementation",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 578,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "977:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 580,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 585,
                  "src": "1001:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 579,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1001:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1000:9:3"
            },
            "scope": 596,
            "src": "954:93:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 594,
              "nodeType": "Block",
              "src": "1179:426:3",
              "statements": [
                {
                  "assignments": [
                    589
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 589,
                      "name": "target",
                      "nodeType": "VariableDeclaration",
                      "scope": 595,
                      "src": "1189:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 588,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1189:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 592,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 590,
                      "name": "implementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 585,
                      "src": "1206:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1206:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1189:33:3"
                },
                {
                  "externalReferences": [
                    {
                      "target": {
                        "declaration": 589,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1369:6:3",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 593,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let ptr := mload(0x40)\n    calldatacopy(ptr, 0, calldatasize())\n    let result := delegatecall(gas(), target, ptr, calldatasize(), 0, 0)\n    let size := returndatasize()\n    returndatacopy(ptr, 0, size)\n    switch result\n    case 0 {\n        revert(ptr, size)\n    }\n    case 1 {\n        return(ptr, size)\n    }\n}",
                  "src": "1232:373:3"
                }
              ]
            },
            "documentation": "@dev Proxy function. Delegate calls to the address taken on implementation()",
            "id": 595,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 586,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1161:2:3"
            },
            "payable": true,
            "returnParameters": {
              "id": 587,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1179:0:3"
            },
            "scope": 596,
            "src": "1152:453:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 597,
        "src": "240:1367:3"
      }
    ],
    "src": "0:1607:3"
  },
  "legacyAST": {
    "absolutePath": "/home/travis/build/Frontier-project/TRL/contracts/Proxy.sol",
    "exportedSymbols": {
      "Proxy": [
        596
      ]
    },
    "id": 597,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 539,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "/home/travis/build/Frontier-project/TRL/contracts/TRLStorage.sol",
        "file": "./TRLStorage.sol",
        "id": 540,
        "nodeType": "ImportDirective",
        "scope": 597,
        "sourceUnit": 1802,
        "src": "26:26:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 541,
        "nodeType": "ImportDirective",
        "scope": 597,
        "sourceUnit": 5390,
        "src": "53:63:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 542,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5389,
              "src": "258:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$5389",
                "typeString": "contract Ownable"
              }
            },
            "id": 543,
            "nodeType": "InheritanceSpecifier",
            "src": "258:7:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 544,
              "name": "TRLStorage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1801,
              "src": "267:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TRLStorage_$1801",
                "typeString": "contract TRLStorage"
              }
            },
            "id": 545,
            "nodeType": "InheritanceSpecifier",
            "src": "267:10:3"
          }
        ],
        "contractDependencies": [
          1801,
          5389
        ],
        "contractKind": "contract",
        "documentation": "A proxy Smart Contract following ERC897. Delegate calls to a target contract accessible via implementation() ",
        "fullyImplemented": true,
        "id": 596,
        "linearizedBaseContracts": [
          596,
          1801,
          5389
        ],
        "name": "Proxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 547,
            "name": "logicContract",
            "nodeType": "VariableDeclaration",
            "scope": 596,
            "src": "285:28:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 546,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "285:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 568,
              "nodeType": "Block",
              "src": "571:102:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 555,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5917,
                            "src": "589:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "589:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 557,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5314,
                            "src": "603:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "603:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "589:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 554,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5920,
                        5921
                      ],
                      "referencedDeclaration": 5920,
                      "src": "581:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "581:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 561,
                  "nodeType": "ExpressionStatement",
                  "src": "581:30:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 562,
                      "name": "logicContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 547,
                      "src": "621:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 563,
                      "name": "_account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 549,
                      "src": "637:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "621:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 565,
                  "nodeType": "ExpressionStatement",
                  "src": "621:24:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "662:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 553,
                  "id": 567,
                  "nodeType": "Return",
                  "src": "655:11:3"
                }
              ]
            },
            "documentation": "@dev Sets the target address where the calls will be delegated. \n@param _account Target address, that will be accesible via implementation()",
            "id": 569,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setContractLogic",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 549,
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "scope": 569,
                  "src": "523:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 548,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "523:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "522:18:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 552,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 569,
                  "src": "557:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 551,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "557:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "556:14:3"
            },
            "scope": 596,
            "src": "497:176:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 576,
              "nodeType": "Block",
              "src": "842:25:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "32",
                    "id": 574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "859:1:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "functionReturnParameters": 573,
                  "id": 575,
                  "nodeType": "Return",
                  "src": "852:8:3"
                }
              ]
            },
            "documentation": "@dev ERC897, whether it is a forwarding (1) or an upgradeable (2) proxy",
            "id": 577,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "proxyType",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 570,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "797:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 573,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 572,
                  "name": "proxyTypeId",
                  "nodeType": "VariableDeclaration",
                  "scope": 577,
                  "src": "821:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 571,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "821:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "820:21:3"
            },
            "scope": 596,
            "src": "779:88:3",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 584,
              "nodeType": "Block",
              "src": "1010:37:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 582,
                    "name": "logicContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 547,
                    "src": "1027:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 581,
                  "id": 583,
                  "nodeType": "Return",
                  "src": "1020:20:3"
                }
              ]
            },
            "documentation": "@dev ERC897, the address the proxy would delegate calls to",
            "id": 585,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "implementation",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 578,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "977:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 580,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 585,
                  "src": "1001:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 579,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1001:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1000:9:3"
            },
            "scope": 596,
            "src": "954:93:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 594,
              "nodeType": "Block",
              "src": "1179:426:3",
              "statements": [
                {
                  "assignments": [
                    589
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 589,
                      "name": "target",
                      "nodeType": "VariableDeclaration",
                      "scope": 595,
                      "src": "1189:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 588,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1189:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 592,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 590,
                      "name": "implementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 585,
                      "src": "1206:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1206:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1189:33:3"
                },
                {
                  "externalReferences": [
                    {
                      "target": {
                        "declaration": 589,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1369:6:3",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 593,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let ptr := mload(0x40)\n    calldatacopy(ptr, 0, calldatasize())\n    let result := delegatecall(gas(), target, ptr, calldatasize(), 0, 0)\n    let size := returndatasize()\n    returndatacopy(ptr, 0, size)\n    switch result\n    case 0 {\n        revert(ptr, size)\n    }\n    case 1 {\n        return(ptr, size)\n    }\n}",
                  "src": "1232:373:3"
                }
              ]
            },
            "documentation": "@dev Proxy function. Delegate calls to the address taken on implementation()",
            "id": 595,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 586,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1161:2:3"
            },
            "payable": true,
            "returnParameters": {
              "id": 587,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1179:0:3"
            },
            "scope": 596,
            "src": "1152:453:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 597,
        "src": "240:1367:3"
      }
    ],
    "src": "0:1607:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0xfaadd037c0275d079ac241d412658b44f9fa2abf",
      "transactionHash": "0x7919f69926d85c76db79f0db98d15145cb926ca47f26796a9a42b19d807a56b4"
    },
    "1543338112102": {
      "events": {},
      "links": {},
      "address": "0x01b2f9805491c53df85c6b99bbba4fba7a803b62",
      "transactionHash": "0xd3e4e33fa1cadb2a532cf4a4799fcf017d4c64e90ccf78b37df39c91fda58fe2"
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-12-12T15:31:09.414Z"
}